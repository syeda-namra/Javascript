import { Directive, HostListener, Input } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "./show-hide.service";
export class ShowHideTriggerDirective {
    constructor(service, errorHandler) {
        this.service = service;
        this.errorHandler = errorHandler;
    }
    onClick() {
        if (this.showHideTrigger) {
            this.service.toggleShow(this.showHideTrigger);
        }
        else {
            this.errorHandler.handleError(new Error(`Status can not be changed without [id].`));
        }
    }
}
ShowHideTriggerDirective.ɵfac = function ShowHideTriggerDirective_Factory(t) { return new (t || ShowHideTriggerDirective)(i0.ɵɵdirectiveInject(i1.ShowHideService), i0.ɵɵdirectiveInject(i0.ErrorHandler)); };
ShowHideTriggerDirective.ɵdir = /*@__PURE__*/ i0.ɵɵdefineDirective({ type: ShowHideTriggerDirective, selectors: [["", "showHideTrigger", ""]], hostBindings: function ShowHideTriggerDirective_HostBindings(rf, ctx) { if (rf & 1) {
        i0.ɵɵlistener("click", function ShowHideTriggerDirective_click_HostBindingHandler() { return ctx.onClick(); });
    } }, inputs: { showHideTrigger: "showHideTrigger" } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(ShowHideTriggerDirective, [{
        type: Directive,
        args: [{
                // eslint-disable-next-line @angular-eslint/directive-selector
                selector: '[showHideTrigger]'
            }]
    }], function () { return [{ type: i1.ShowHideService }, { type: i0.ErrorHandler }]; }, { showHideTrigger: [{
            type: Input
        }], onClick: [{
            type: HostListener,
            args: ['click']
        }] }); })();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2hvdy1oaWRlLXRyaWdnZXIuZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vcHJvamVjdHMvbmd4LXNob3ctaGlkZS1wYXNzd29yZC9zcmMvbGliL3Nob3ctaGlkZS10cmlnZ2VyLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFlBQVksRUFBRSxLQUFLLEVBQWdCLE1BQU0sZUFBZSxDQUFDOzs7QUFPN0UsTUFBTSxPQUFPLHdCQUF3QjtJQUduQyxZQUFvQixPQUF3QixFQUFVLFlBQTBCO1FBQTVELFlBQU8sR0FBUCxPQUFPLENBQWlCO1FBQVUsaUJBQVksR0FBWixZQUFZLENBQWM7SUFBRyxDQUFDO0lBR3BGLE9BQU87UUFDTCxJQUFJLElBQUksQ0FBQyxlQUFlLEVBQUU7WUFDeEIsSUFBSSxDQUFDLE9BQU8sQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLGVBQWUsQ0FBQyxDQUFDO1NBQy9DO2FBQU07WUFDTCxJQUFJLENBQUMsWUFBWSxDQUFDLFdBQVcsQ0FBQyxJQUFJLEtBQUssQ0FBQyx5Q0FBeUMsQ0FBQyxDQUFDLENBQUM7U0FDckY7SUFDSCxDQUFDOztnR0FaVSx3QkFBd0I7MkVBQXhCLHdCQUF3QjtxR0FBeEIsYUFBUzs7dUZBQVQsd0JBQXdCO2NBSnBDLFNBQVM7ZUFBQztnQkFDVCw4REFBOEQ7Z0JBQzlELFFBQVEsRUFBRSxtQkFBbUI7YUFDOUI7NkZBRVUsZUFBZTtrQkFBdkIsS0FBSztZQUtOLE9BQU87a0JBRE4sWUFBWTttQkFBQyxPQUFPIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRGlyZWN0aXZlLCBIb3N0TGlzdGVuZXIsIElucHV0LCBFcnJvckhhbmRsZXIgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFNob3dIaWRlU2VydmljZSB9IGZyb20gJy4vc2hvdy1oaWRlLnNlcnZpY2UnO1xuXG5ARGlyZWN0aXZlKHtcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEBhbmd1bGFyLWVzbGludC9kaXJlY3RpdmUtc2VsZWN0b3JcbiAgc2VsZWN0b3I6ICdbc2hvd0hpZGVUcmlnZ2VyXSdcbn0pXG5leHBvcnQgY2xhc3MgU2hvd0hpZGVUcmlnZ2VyRGlyZWN0aXZlIHtcbiAgQElucHV0KCkgc2hvd0hpZGVUcmlnZ2VyPzogc3RyaW5nO1xuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgc2VydmljZTogU2hvd0hpZGVTZXJ2aWNlLCBwcml2YXRlIGVycm9ySGFuZGxlcjogRXJyb3JIYW5kbGVyKSB7fVxuXG4gIEBIb3N0TGlzdGVuZXIoJ2NsaWNrJylcbiAgb25DbGljaygpIHtcbiAgICBpZiAodGhpcy5zaG93SGlkZVRyaWdnZXIpIHtcbiAgICAgIHRoaXMuc2VydmljZS50b2dnbGVTaG93KHRoaXMuc2hvd0hpZGVUcmlnZ2VyKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5lcnJvckhhbmRsZXIuaGFuZGxlRXJyb3IobmV3IEVycm9yKGBTdGF0dXMgY2FuIG5vdCBiZSBjaGFuZ2VkIHdpdGhvdXQgW2lkXS5gKSk7XG4gICAgfVxuICB9XG59XG4iXX0=